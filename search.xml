<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Java冒泡排序]]></title>
    <url>%2F2017%2F11%2F03%2FJava%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[冒泡排序（Bubble Sort）是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果他们的顺序错误就把他们交换过来。走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。这个算法的名字由来是因为越小的元素会经由交换慢慢“浮”到数列的顶端。 冒泡排序算法的运作如下: 比较相邻的元素。如果第一个比第二个大，就交换他们两个。 对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对。 在这一点，最后的元素应该会是最大的数。 针对所有的元素重复以上的步骤，除了最后一个。 持续每次对越来越少的元素重复上面的步骤，直到没有任何一对数字需要比较。 冒泡排序的过程图： 代码：12345678910111213141516171819202122public class BubbleSort&#123; public static void main(String[] args)&#123; int score[] = &#123;67, 69, 75, 87, 89, 90, 99, 100&#125;; for (int i = 0; i &lt; score.length -1; i++)&#123; //最多做n-1趟排序 for(int j = 0 ;j &lt; score.length - i - 1; j++)&#123; //对当前无序区间score[0......length-i-1]进行排序(j的范围很关键，这个范围是在逐步缩小的) if(score[j] &lt; score[j + 1])&#123; //把小的值交换到后面 int temp = score[j]; score[j] = score[j + 1]; score[j + 1] = temp; &#125; &#125; System.out.print("第" + (i + 1) + "次排序结果："); for(int a = 0; a &lt; score.length; a++)&#123; System.out.print(score[a] + "\t"); &#125; System.out.println(""); &#125; System.out.print("最终排序结果："); for(int a = 0; a &lt; score.length; a++)&#123; System.out.print(score[a] + "\t"); &#125; &#125;]]></content>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Java Web实验一]]></title>
    <url>%2F2017%2F11%2F03%2FJava%20Web%E5%AE%9E%E9%AA%8C%E4%B8%80%2F</url>
    <content type="text"><![CDATA[世上本没有路，走的人多了，便成了路。 文学家鲁迅 实验内容 1.建立名为login.html页面，并在web.xml中将login.html配置为欢迎页面。其运行结果如下图所示。点击“登陆”按钮之后，请求LoginServlet对其处理。 2.编写名为LoginServlet的Servlet，取得表单传递的参数（账号和密码）。若账号和密码为“北信”和“admin”则为验证成功，将账号存入request对象中，并将请求转发给WelcomeServlet。若账号和密码验证失败，则响应给客户端如下图所示信息 （1）请求参数的信息；（2）客户端的信息；（3）设置Refresh响应头，10秒钟后跳转到login.html）。 3.编写WelcomeServlet，取出request对象中的账号，并响应给客户端如下图所示信息。点击资源名称超链接之后，将请求发送到DownloadServlet，完成资源的下载。 代码 1. LoginServlet123456789101112131415161718192021222324252627282930313233343536373839404142434445public LoginServlet() &#123; super(); // TODO Auto-generated constructor stub &#125;/** * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response) */public void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; String username = request.getParameter("username"); String password = request.getParameter("password"); if(username.equals("admin")&amp;&amp;password.equals("admin"))&#123; request.setAttribute("username", username); RequestDispatcher rd= request.getRequestDispatcher("WelcomeServlet"); rd.forward(request, response); &#125;else &#123; response.setContentType("text/html;charset=UTF-8"); PrintWriter out = response.getWriter(); out.println("&lt;html&gt;"); out.println("&lt;head&gt;&lt;title&gt;错误信息&lt;/title&gt;&lt;/head&gt;"); out.println("&lt;body&gt;"); out.println("&lt;h3&gt;错误提示:&lt;/h3&gt;"); out.println("账号:"+username); out.println("&lt;br&gt;"); out.println("密码:"+password); out.println("&lt;br/&gt;&lt;br/&gt;"); out.println("&lt;hr width=99% &gt;"); out.println("&lt;table border='0'&gt;"); out.println("&lt;tr&gt;&lt;td&gt;客户主机名:&lt;/td&gt;"); out.println("&lt;td&gt;"+request.getRemoteHost()+"&lt;/td&gt;&lt;/tr&gt;"); out.println("&lt;tr&gt;&lt;td&gt;客户IP地址:&lt;/td&gt;"); out.println("&lt;td&gt;"+request.getRemoteAddr()+"&lt;/td&gt;&lt;/tr&gt;"); out.println("&lt;tr&gt;&lt;td&gt;端口:&lt;/td&gt;"); out.println("&lt;td&gt;"+request.getRemotePort()+"&lt;/td&gt;&lt;/tr&gt;"); out.println("&lt;tr&gt;&lt;td&gt;请求方法:&lt;/td&gt;"); out.println("&lt;td&gt;"+request.getMethod()+"&lt;/td&gt;&lt;/tr&gt;"); out.println("&lt;/table&gt;"); out.println("&lt;br/&gt;&lt;br/&gt;"); out.println("&lt;hr width=99% &gt;"); out.println("&lt;p&gt;你的登陆信息有误&lt;br/&gt;十秒钟后将自动跳转到登陆界面&lt;p&gt;"); out.println("&lt;/body&gt;&lt;/html&gt;"); response.setHeader("Refresh", "10;URL=http://localhost:8080/test/Login.html"); &#125;&#125;'2.WelcomeServlet123456789101112131415161718192021protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; // TODO Auto-generated method stub response.getWriter().append("Served at: ").append(request.getContextPath());&#125;/** * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response) */protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; request.getAttribute("username"); response.setContentType("text/html;charset=UTF-8"); PrintWriter out = response.getWriter(); out.println("&lt;html&gt;&lt;body&gt;"); out.println("&lt;head&gt;&lt;title&gt;成功登陆&lt;/title&gt;&lt;/head&gt;"); out.println("你好,你已成功登陆！&lt;br&gt;欢迎选择资源下载:"); out.println("&lt;br&gt;&lt;br&gt;"); out.println("&lt;a href=DownloadServlet&gt;《hello world!》&lt;/a&gt;"); out.println("&lt;/body&gt;&lt;/html&gt;"); doGet(request, response);&#125;3.DownloadServlet//基本功能实现，有待完善。1234567891011121314151617181920protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException &#123; //设置文件的内容类型 response.setContentType("application/msword;charset=gb2312"); //设置Content-Disposition响应头，指定文件名 response.setHeader("Content-Disposition", "attachment;filename=helloworld!"); //获得输入流对象 OutputStream os = response.getOutputStream(); ServletContext context = getServletContext(); //返回输入流对象 InputStream is = context.getResourceAsStream("/hello.html"); byte[] bytearray=new byte[1024]; int bytesread=0; while((bytesread = is.read(bytearray))!=-1)&#123; //将数据发送到客户端 os.write(bytearray, 0, bytesread); &#125; os.flush(); is.close();&#125; 实验总结 本次实验时间仓促，只是实现了基本功能，还有些逻辑问题没有进一步优化，有待完善。 完成周期过长，基本都是书上的例题，问题不断，不能运行啊，无法正常跳转到下个界面等等。。 还有些问题没有解决，有待优化。]]></content>
      <categories>
        <category>Java Web</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[沉默的大多数]]></title>
    <url>%2F2017%2F11%2F02%2F%E6%B2%89%E9%BB%98%E7%9A%84%E5%A4%A7%E5%A4%9A%E6%95%B0%2F</url>
    <content type="text"><![CDATA[人的一切痛苦，本质上都是对自己的无能的愤怒。—王小波 1. 我选择沉默的主要原因之一：从话语中，你很少能学到人性，从沉默中却能。假如还想学得更多，那就要继续一声不吭 。 2. “在一个喧嚣的话语圈下面，始终有一个沉默的大多数。既然精神原子弹在一颗又一颗地炸着，哪里有我们说话的份?但我辈现在开始说话，以前说过的一切和我们都无关系–总而言之，是个一刀两断的意思。千里之行，始于足下，中国要有自由派，就从我辈开始。” 3. 别人的痛苦才是艺术的源泉。而你去受苦，只会成为别人的艺术源泉。 4. 质朴的人们假如能把自己理解不了的事情看做是与己无关的事，那就好了。 5. 因为没事干而下棋，性质和x差不x太多。 6. 胡思乱想并不有趣，有趣的是有道理而新奇。 7. 在思想真空里煎熬。 8. 真理直率无比，坚硬无比，但凡有一点柔顺，也算不了真理。 9. 假如我被大奸大恶之徒所骗，心理还能平衡，而被善良的低智人所骗，我就不能原谅自己。 10. 现在有很多文人下了海，不再从事文化事业。不管在商界、产业界还是科技界，人们以聪明才智、辛勤劳动来进行竞争。唯独在文化界，赌的是人品、爱国心、羞耻心。照我看来，这有点像赌命，甚至比赌命还严重。这种危险的游戏有何奖品?只是一点小小的文名。所以，你不要怪文人下海。 11. 一般来说，扼杀有趣的人总是这么说的：为了营造至善，我们必须做出这种牺牲，但却忘记了让人们活着得到乐趣，这本身就是善;因为这点小小的疏忽，至善就变成了至恶······ 12. 周围的世界太过荒诞，所以暗下决心保持沉默。 13. 罗素先生曾说，真正的伦理原则是把人人同等看待。我以为这个原则是说，当语及他人时，首先该把他当个寻常人，然后再讨论他的善恶是非。这不是尊重他，而是尊重“那人”，从最深的意义上说，更是尊重自己——所有的人毕竟属同一物种。人的成就、过失、美德和陋习，都不该用他的特殊来解释。You are special，这句话只适合于对爱人讲。假如不是这么用，也很肉麻。 14. 在我们这里，人对人的态度，有时太过粗暴、太不讲道理。按现代的标准来看，这种态度过于原始——这可能是传统社会的痕迹。假如真是这样，我们或许可以期望将来情况会好些。 15. 照我看，不管干什么都可以保持沉默。 16. 假如一个人每天吃一样的饭，干一样的活，再加上把八个样板戏翻过来倒过去的看，看到听了上句知道下句的程度，就值得我最大的同情。 17. 我相信这不是我一个人的经历：傍晚时分，你坐在屋檐下，看着天慢慢地黑下去，心里寂寞而凄凉，感到自己的生命被剥夺了。当时我是个年轻人，但我害怕这样生活下去，衰老下去。在我看来，这是比死亡更可怕的事。 18. 在我周围，像我这种性格的人特多——在公众场合什么都不说，到了私下里却妙语连珠，换言之，对信得过的人什么都说，对信不过的人什么都不说。保持沉默是怯懦的。 19. 一个人想像自己不懂得的事很容易浪漫 20. 我所说的一切全都过去了。似乎没有必要保持沉默了 21. 口沫飞溅，对别人大做价值评判，层次很低。 22. 不管是同性恋，还是异性恋，对爱情的忠贞不渝总是让人敬重。 23. 只有那些知道自己智慧一文不值的人，才是最有智慧的人。 24. 人家有几样好东西，活的好一点，心情也好一点，这就是轻狂。非得把这些好东西毁了，让人家沉痛，这就是不轻狂。 25. 我常听人说：这世界上哪有那么多有趣的事情。人对现实世界有这种评价、这种感慨，恐怕不能说是错误的。问题就在于应该做点什么。这句感慨是个四通八达的路口，所有的人都到达过这个地方，然后在此分手。有些人去开创有趣的事业，有些人去开创无趣的事业。前者以为，既然有趣的事不多，我们才要做有趣的事。后者经过这一番感慨，就自以为知道了天命，然后板起脸来对别人进行说教。 26. 从话语中，你很少能学到人性，从沉默中却能。假如还想学得更多，那就要继续一声不吭。 27. 在我周围，像我这种性格的人特多──在公众场合什么都不说，到了私下里则妙语连珠，换言之，对信得过的人什么都说，对信不过的人什么都不说。起初我以为这是因为经历了严酷的时期，后来才发现，这是中国人的通病。 28. 是我要做不是我必须做——这是一种本质的区别。我个人认为，做的事才是“有”，做自己也不知为什么要做的事则是“无”。 29. 人活在世界上，不可以有偏差;而且多少要费点劲儿，才能把自己保持到理性的轨道上。 30. 说这辈子我干什么都可以，就是不能做一个一无所能，就能明辨是非的人。]]></content>
      <categories>
        <category>读书随笔</category>
      </categories>
      <tags>
        <tag>王小波</tag>
        <tag>语录</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F10%2F31%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Lee’s Blog欢迎来到我的个人小站，本站主要记录学习笔记，生活随笔，电影推荐等等。1printf(&quot;Hello World!&quot;);]]></content>
  </entry>
</search>
